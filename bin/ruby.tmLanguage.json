{
	"name": "StoutLang",
	"scopeName": "source.sl",
	"fileTypes": [
	  "sl"
	],
	"patterns": [
	  {
		"include": "#keywords"
	  },
	  {
		"include": "#strings"
	  },
	  {
		"include": "#numbers"
	  },
	  {
		"include": "#comments"
	  },
	  {
		"include": "#types"
	  },
	  {
		"include": "#method_calls"
	  },
	  {
		"include": "#function_calls"
	  },
	  {
		"include": "#properties"
	  },
	  {
		"include": "#variables"
	  }
	],
	"repository": {
	  "keywords": {
		"patterns": [
		  {
			"name": "keyword.control.sl",
			"match": "\\b(if|elif|else|def|struct|true|false)\\b"
		  }
		]
	  },
	  "strings": {
		"name": "string.quoted.double.sl",
		"begin": "\"",
		"end": "\"",
		"patterns": [
		  {
			"name": "constant.character.escape.sl",
			"match": "\\\\."
		  },
		  {
			"name": "variable.other.interpolation.sl",
			"begin": "\\${",
			"end": "}"
		  }
		]
	  },
	  "numbers": {
		"patterns": [
		  {
			"name": "constant.numeric.float.sl",
			"match": "[+-]?\\d+\\.\\d+([eE][+-]?\\d+)?"
		  },
		  {
			"name": "constant.numeric.integer.sl",
			"match": "[+-]?\\d+"
		  }
		]
	  },
	  "comments": {
		"name": "comment.line.number-sign.sl",
		"begin": "#",
		"end": "$"
	  },
	  "types": {
		"patterns": [
		  {
			"name": "support.type.sl",
			"match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
		  },
		  {
			"name": "variable.other.type.sl",
			"match": "'[a-z][a-zA-Z0-9_]*\\b"
		  }
		]
	  },
	  "method_calls": {
		"patterns": [
		  {
			"match": "(\\.)\\s*([a-zA-Z][a-zA-Z0-9_]*)\\s*(\\(.*?\\))?",
			"captures": {
			  "1": {
				"name": "punctuation.separator.method.sl"
			  },
			  "2": {
				"name": "entity.name.function.sl"
			  },
			  "3": {
				"patterns": [
				  {
					"include": "$self"
				  }
				]
			  }
			}
		  }
		]
	  },
	  "function_calls": {
		"patterns": [
		  {
			"match": "([a-zA-Z][a-zA-Z0-9_]*)\\s*(\\(.*?\\))",
			"captures": {
			  "1": {
				"name": "entity.name.function.sl"
			  },
			  "2": {
				"patterns": [
				  {
					"include": "$self"
				  }
				]
			  }
			}
		  }
		]
	  },
	  "properties": {
		"match": "(@)([a-z][a-zA-Z0-9_]*)",
		"captures": {
		  "1": {
			"name": "punctuation.definition.variable.sl"
		  },
		  "2": {
			"name": "variable.other.readwrite.instance.sl"
		  }
		}
	  },
	  "variables": {
		"match": "\\b[a-z][a-zA-Z0-9_]*\\b",
		"name": "variable.other.sl"
	  }
	},
	"colors": {
	  "string.quoted.double.sl": "#E6DB74",
	  "variable.other.sl": "#66D9EF"
	}
  }