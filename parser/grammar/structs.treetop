grammar Structs
  rule struct
    'struct ' type space? block {
      def to_ast
        StoutLang::Ast::Struct.new(type.to_ast, block.to_ast, self)
      end
    }
  end


  rule property
    '@' identifier space? type_sig:type_sig? {
      def to_ast
        type_sig_ast = type_sig.respond_to?(:to_ast) ? type_sig.to_ast : nil
        Property.new(identifier.to_ast, type_sig_ast, self)
      end
    }
  end
end
